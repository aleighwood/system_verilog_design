$date
	Tue Feb 13 16:24:29 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module reg_file_alu_tb $end
$var wire 8 ! cpu_out [7:0] $end
$var wire 1 " Zero $end
$var wire 8 # ALUResult [7:0] $end
$var reg 2 $ ALUControl [1:0] $end
$var reg 1 % ALUSrc $end
$var reg 1 & CLK $end
$var reg 4 ' RA1 [3:0] $end
$var reg 4 ( RA2 [3:0] $end
$var reg 4 ) WA [3:0] $end
$var reg 8 * immediate [7:0] $end
$var reg 1 + write_enable $end
$scope module dut $end
$var wire 2 , ALUControl [1:0] $end
$var wire 1 % ALUSrc $end
$var wire 1 & CLK $end
$var wire 4 - RA1 [3:0] $end
$var wire 4 . RA2 [3:0] $end
$var wire 4 / WA [3:0] $end
$var wire 8 0 cpu_out [7:0] $end
$var wire 8 1 immediate [7:0] $end
$var wire 1 + write_enable $end
$var wire 8 2 SrcB [7:0] $end
$var wire 8 3 RD2 [7:0] $end
$var wire 8 4 RD1 [7:0] $end
$var reg 8 5 ALUResult [7:0] $end
$var reg 1 " Zero $end
$upscope $end
$scope begin $ivl_for_loop0 $end
$var integer 32 6 i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop1 $end
$var integer 32 7 i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 7
b1 6
b1 5
b0 4
bx 3
b1 2
b1 1
bx 0
b1 /
bx .
b0 -
b10 ,
1+
b1 *
b1 )
bx (
b0 '
0&
1%
b10 $
b1 #
0"
bx !
$end
#20000
1&
#40000
b10 #
b10 5
b10 2
b10 *
b10 1
b10 )
b10 /
0&
b10 6
#60000
1&
#80000
b11 #
b11 5
b11 2
b11 *
b11 1
b11 )
b11 /
0&
b11 6
#100000
1&
#120000
b100 #
b100 5
b100 2
b100 *
b100 1
b100 )
b100 /
0&
b100 6
#140000
1&
#160000
b101 #
b101 5
b101 2
b101 *
b101 1
b101 )
b101 /
0&
b101 6
#180000
1&
#200000
b110 #
b110 5
b110 2
b110 *
b110 1
b110 )
b110 /
0&
b110 6
#220000
1&
#240000
b111 #
b111 5
b111 2
b111 *
b111 1
b111 )
b111 /
0&
b111 6
#260000
1&
#280000
b1000 #
b1000 5
b1000 2
b1000 *
b1000 1
b1000 )
b1000 /
0&
b1000 6
#300000
1&
#320000
b1001 #
b1001 5
b1001 2
b1001 *
b1001 1
b1001 )
b1001 /
0&
b1001 6
#340000
1&
#360000
b1010 #
b1010 5
b1010 2
b1010 *
b1010 1
b1010 )
b1010 /
0&
b1010 6
#380000
1&
#400000
b1011 #
b1011 5
b1011 2
b1011 *
b1011 1
b1011 )
b1011 /
0&
b1011 6
#420000
1&
#440000
b1100 #
b1100 5
b1100 2
b1100 *
b1100 1
b1100 )
b1100 /
0&
b1100 6
#460000
1&
#480000
b1101 #
b1101 5
b1101 2
b1101 *
b1101 1
b1101 )
b1101 /
0&
b1101 6
#500000
1&
#520000
b1110 #
b1110 5
b1110 2
b1110 *
b1110 1
b1110 )
b1110 /
0&
b1110 6
#540000
1&
#560000
b1111 #
b1111 5
b1111 2
b1111 *
b1111 1
b1111 )
b1111 /
0&
b1111 6
#580000
b1111 !
b1111 0
1&
#600000
1"
b0 #
b0 5
b0 2
b0 3
b0 *
b0 1
b0 (
b0 .
0+
b10000 6
#620000
0"
b1 #
b1 5
b1 3
b1 4
b1 (
b1 .
b1 '
b1 -
b1 7
#640000
b10 #
b10 5
b10 3
b10 4
b10 (
b10 .
b10 '
b10 -
b10 7
#660000
b11 #
b11 5
b11 3
b11 4
b11 (
b11 .
b11 '
b11 -
b11 7
#680000
b100 #
b100 5
b100 3
b100 4
b100 (
b100 .
b100 '
b100 -
b100 7
#700000
b101 #
b101 5
b101 3
b101 4
b101 (
b101 .
b101 '
b101 -
b101 7
#720000
b110 #
b110 5
b110 3
b110 4
b110 (
b110 .
b110 '
b110 -
b110 7
#740000
b111 #
b111 5
b111 3
b111 4
b111 (
b111 .
b111 '
b111 -
b111 7
#760000
b1000 #
b1000 5
b1000 3
b1000 4
b1000 (
b1000 .
b1000 '
b1000 -
b1000 7
#780000
b1001 #
b1001 5
b1001 3
b1001 4
b1001 (
b1001 .
b1001 '
b1001 -
b1001 7
#800000
b1010 #
b1010 5
b1010 3
b1010 4
b1010 (
b1010 .
b1010 '
b1010 -
b1010 7
#820000
b1011 #
b1011 5
b1011 3
b1011 4
b1011 (
b1011 .
b1011 '
b1011 -
b1011 7
#840000
b1100 #
b1100 5
b1100 3
b1100 4
b1100 (
b1100 .
b1100 '
b1100 -
b1100 7
#860000
b1101 #
b1101 5
b1101 3
b1101 4
b1101 (
b1101 .
b1101 '
b1101 -
b1101 7
#880000
b1110 #
b1110 5
b1110 3
b1110 4
b1110 (
b1110 .
b1110 '
b1110 -
b1110 7
#900000
b1111 #
b1111 5
b1111 3
b1111 4
b1111 (
b1111 .
b1111 '
b1111 -
b1111 7
#920000
b10000 7
